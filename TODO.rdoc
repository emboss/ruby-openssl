== OpenSSL::ASN1::Template

=== sequence_of_choice, set_of_choice

=== Tests 

* Test that ensure that the temporary parse data is not changed (e.g. parse twice, see 
if it works, especially tagged data)

* Choice with asn1_sequence & asn1_set

* Choice with asn1_any

* Choice with asn1_sequence_of && asn1_set_of

* Implict & explicit tagging for asn1_sequence_of && asn1_set_of

=== String encoders

Introduce encoders that force a certain encoding that is specific to the string type?

=== Infinite length

* convert infinite length primitives to a single primitive if not expected from definition
* infinite length should only be a hint for encoding, primtive values should always
  be parsed and in constructed case converted to a single distinct value

=== Multi-threaded parsing

* Sequences and sets could be parsed using threads from a thread pool to boost performance

=== Invariance of to_asn1 and parse

* Right now, the encoding of a template creates classes with the tagging hints. However,
this breaks the following workflow: tagged.to_asn1 -> type.parse(asn1)
The reason is that the parse routines look for the structures that are created by parsing
from der. In that case tagged instances are represented by a ASN1Data with context-specific
tagging. The same structures should be created when encoding a template to ASN.1